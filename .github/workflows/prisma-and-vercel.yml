name: Migrate and Deploy to Vercel

on:
  push:
    branches: ["branch-3"]
  workflow_dispatch: {}

jobs:
  migrate-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        run: npm ci

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Run migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: npx prisma migrate deploy

      - name: Install Vercel CLI
        run: npm install -g vercel@35

      - name: Vercel deploy (production preview)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          # NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
        run: |
          vercel env pull .vercel.env --yes || true
          vercel deploy --prebuilt --token $VERCEL_TOKEN --confirm --prod
name: Migrate and Deploy to Vercel

on:
  push:
    branches: ["branch-3"]
  workflow_dispatch: {}

jobs:
  migrate-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        run: npm ci

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Run migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: npx prisma migrate deploy

      - name: Install Vercel CLI
        run: npm install -g vercel@35

      - name: Vercel deploy (production preview)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          # NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
        run: |
          vercel env pull .vercel.env --yes || true
          vercel deploy --prebuilt --token $VERCEL_TOKEN --confirm --prod
